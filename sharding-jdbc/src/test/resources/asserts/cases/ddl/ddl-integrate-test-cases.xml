<integrate-test-cases>
    <ddl-test-case sql-case-id="create_table">
        <assertion sharding-rule-type="db" table="t_log" expected-data-file="create_table.xml" />
        <assertion sharding-rule-type="tbl" table="t_log" expected-data-file="create_table.xml" />
        <assertion sharding-rule-type="dbtbl_with_masterslave" table="t_log" expected-data-file="create_table.xml" />
        <assertion sharding-rule-type="masterslave" table="t_log" expected-data-file="create_table.xml" />
    </ddl-test-case>
    
    <ddl-test-case sql-case-id="create_table_if_not_exists">
        <assertion sharding-rule-type="db" table="t_log" expected-data-file="create_table.xml" />
        <assertion sharding-rule-type="tbl" table="t_log" expected-data-file="create_table.xml" />
        <assertion sharding-rule-type="dbtbl_with_masterslave" table="t_log" expected-data-file="create_table.xml" />
        <assertion sharding-rule-type="masterslave" table="t_log" expected-data-file="create_table.xml" />
    </ddl-test-case>
    
    <ddl-test-case sql-case-id="create_temporary_table_if_not_exists">
        <assertion sharding-rule-type="db" table="t_temp_log" expected-data-file="create_temporary_table.xml" />
        <assertion sharding-rule-type="tbl" table="t_temp_log" expected-data-file="create_temporary_table.xml" />
        <assertion sharding-rule-type="dbtbl_with_masterslave" table="t_temp_log" expected-data-file="create_temporary_table.xml" />
        <assertion sharding-rule-type="masterslave" table="t_temp_log" expected-data-file="create_temporary_table.xml" />
    </ddl-test-case>
    
    <ddl-test-case sql-case-id="create_global_temporary_table">
        <assertion sharding-rule-type="db" table="t_temp_log" expected-data-file="create_temporary_table.xml" />
        <assertion sharding-rule-type="tbl" table="t_temp_log" expected-data-file="create_temporary_table.xml" />
        <assertion sharding-rule-type="dbtbl_with_masterslave" table="t_temp_log" expected-data-file="create_temporary_table.xml" />
        <assertion sharding-rule-type="masterslave" table="t_temp_log" expected-data-file="create_temporary_table.xml" />
    </ddl-test-case>
    
    <ddl-test-case sql-case-id="create_local_temp_table">
        <assertion sharding-rule-type="db" table="t_temp_log" expected-data-file="create_temporary_table.xml" />
        <assertion sharding-rule-type="tbl" table="t_temp_log" expected-data-file="create_temporary_table.xml" />
        <assertion sharding-rule-type="dbtbl_with_masterslave" table="t_temp_log" expected-data-file="create_temporary_table.xml" />
        <assertion sharding-rule-type="masterslave" table="t_temp_log" expected-data-file="create_temporary_table.xml" />
    </ddl-test-case>
    
    <ddl-test-case sql-case-id="create_unlogged_table">
        <assertion sharding-rule-type="db" table="t_log" expected-data-file="create_table.xml" />
        <assertion sharding-rule-type="tbl" table="t_log" expected-data-file="create_table.xml" />
        <assertion sharding-rule-type="dbtbl_with_masterslave" table="t_log" expected-data-file="create_table.xml" />
        <assertion sharding-rule-type="masterslave" table="t_log" expected-data-file="create_table.xml" />
    </ddl-test-case>
    
    <ddl-test-case sql-case-id="create_index">
        <assertion sharding-rule-type="db" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" expected-data-file="create_index.xml" />
        <assertion sharding-rule-type="tbl" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" expected-data-file="create_index.xml" />
        <assertion sharding-rule-type="dbtbl_with_masterslave" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" expected-data-file="create_index.xml" />
        <assertion sharding-rule-type="masterslave" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" expected-data-file="create_index.xml" />
    </ddl-test-case>
    
    <ddl-test-case sql-case-id="create_unique_index" init-sql="CREATE TABLE t_log(id int, status varchar(10))">
        <assertion sharding-rule-type="db" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" expected-data-file="create_unique_index.xml" />
        <assertion sharding-rule-type="tbl" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" expected-data-file="create_unique_index.xml" />
        <assertion sharding-rule-type="dbtbl_with_masterslave" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" expected-data-file="create_unique_index.xml" />
        <assertion sharding-rule-type="masterslave" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" expected-data-file="create_unique_index.xml" />
    </ddl-test-case>
    
    <ddl-test-case sql-case-id="alter_table">
        <assertion sharding-rule-type="db" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" expected-data-file="alter_table.xml" />
        <assertion sharding-rule-type="tbl" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" expected-data-file="alter_table.xml" />
        <assertion sharding-rule-type="dbtbl_with_masterslave" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" expected-data-file="alter_table.xml" />
        <assertion sharding-rule-type="masterslave" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" expected-data-file="alter_table.xml" />
    </ddl-test-case>
    
    <ddl-test-case sql-case-id="alter_table_if_exists_only">
        <assertion sharding-rule-type="db" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" expected-data-file="alter_table.xml" />
        <assertion sharding-rule-type="tbl" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" expected-data-file="alter_table.xml" />
        <assertion sharding-rule-type="dbtbl_with_masterslave" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" expected-data-file="alter_table.xml" />
        <assertion sharding-rule-type="masterslave" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" expected-data-file="alter_table.xml" />
    </ddl-test-case>
    
    <ddl-test-case sql-case-id="drop_table">
        <assertion sharding-rule-type="db" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" expected-data-file="empty_log.xml" />
        <assertion sharding-rule-type="tbl" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" expected-data-file="empty_log.xml" />
        <assertion sharding-rule-type="dbtbl_with_masterslave" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" expected-data-file="empty_log.xml" />
        <assertion sharding-rule-type="masterslave" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" expected-data-file="empty_log.xml" />
    </ddl-test-case>
    
    <ddl-test-case sql-case-id="drop_table_if_exists">
        <assertion sharding-rule-type="db" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" expected-data-file="empty_log.xml" />
        <assertion sharding-rule-type="tbl" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" expected-data-file="empty_log.xml" />
        <assertion sharding-rule-type="dbtbl_with_masterslave" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" expected-data-file="empty_log.xml" />
        <assertion sharding-rule-type="masterslave" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" expected-data-file="empty_log.xml" />
    </ddl-test-case>
    
    <ddl-test-case sql-case-id="drop_temporary_table_if_exists">
        <assertion sharding-rule-type="db" init-sql="CREATE TABLE t_temp_log(id int, status varchar(10))" table="t_temp_log" expected-data-file="empty_temp_log.xml" />
        <assertion sharding-rule-type="tbl" init-sql="CREATE TABLE t_temp_log(id int, status varchar(10))" table="t_temp_log" expected-data-file="empty_temp_log.xml" />
        <assertion sharding-rule-type="dbtbl_with_masterslave" init-sql="CREATE TABLE t_temp_log(id int, status varchar(10))" table="t_temp_log" expected-data-file="empty_temp_log.xml" />
        <assertion sharding-rule-type="masterslave" init-sql="CREATE TABLE t_temp_log(id int, status varchar(10))" table="t_temp_log" expected-data-file="empty_temp_log.xml" />
    </ddl-test-case>
    
    <ddl-test-case sql-case-id="drop_table_restrict">
        <assertion sharding-rule-type="db" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" expected-data-file="empty_log.xml" />
        <assertion sharding-rule-type="tbl" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" expected-data-file="empty_log.xml" />
        <assertion sharding-rule-type="dbtbl_with_masterslave" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" expected-data-file="empty_log.xml" />
        <assertion sharding-rule-type="masterslave" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" expected-data-file="empty_log.xml" />
    </ddl-test-case>
    
    <ddl-test-case sql-case-id="drop_table_cascade">
        <assertion sharding-rule-type="db" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" expected-data-file="empty_log.xml" />
        <assertion sharding-rule-type="tbl" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" expected-data-file="empty_log.xml" />
        <assertion sharding-rule-type="dbtbl_with_masterslave" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" expected-data-file="empty_log.xml" />
        <assertion sharding-rule-type="masterslave" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" expected-data-file="empty_log.xml" />
    </ddl-test-case>
    
    <ddl-test-case sql-case-id="drop_table_cascade_constraints_and_purge">
        <assertion sharding-rule-type="db" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" expected-data-file="empty_log.xml" />
        <assertion sharding-rule-type="tbl" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" expected-data-file="empty_log.xml" />
        <assertion sharding-rule-type="dbtbl_with_masterslave" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" expected-data-file="empty_log.xml" />
        <assertion sharding-rule-type="masterslave" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" expected-data-file="empty_log.xml" />
    </ddl-test-case>
    
    <ddl-test-case sql-case-id="drop_index">
        <assertion sharding-rule-type="db" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" />
        <assertion sharding-rule-type="tbl" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" />
        <assertion sharding-rule-type="dbtbl_with_masterslave" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" />
        <assertion sharding-rule-type="masterslave" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" />
    </ddl-test-case>
    
    <ddl-test-case sql-case-id="drop_index_without_on">
        <assertion sharding-rule-type="db" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" />
        <assertion sharding-rule-type="tbl" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" />
        <assertion sharding-rule-type="dbtbl_with_masterslave" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" />
        <assertion sharding-rule-type="masterslave" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" />
    </ddl-test-case>
    
    <ddl-test-case sql-case-id="drop_index_if_exists">
        <assertion sharding-rule-type="db" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" />
        <assertion sharding-rule-type="tbl" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" />
        <assertion sharding-rule-type="dbtbl_with_masterslave" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" />
        <assertion sharding-rule-type="masterslave" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" />
    </ddl-test-case>
    
    <ddl-test-case sql-case-id="truncate_table">
        <assertion sharding-rule-type="db" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" expected-data-file="empty_log.xml" />
        <assertion sharding-rule-type="tbl" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" expected-data-file="empty_log.xml" />
        <assertion sharding-rule-type="dbtbl_with_masterslave" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" expected-data-file="empty_log.xml" />
        <assertion sharding-rule-type="masterslave" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" expected-data-file="empty_log.xml" />
    </ddl-test-case>
    
    <ddl-test-case sql-case-id="truncate_table_only">
        <assertion sharding-rule-type="db" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" expected-data-file="empty_log.xml" />
        <assertion sharding-rule-type="tbl" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" expected-data-file="empty_log.xml" />
        <assertion sharding-rule-type="dbtbl_with_masterslave" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" expected-data-file="empty_log.xml" />
        <assertion sharding-rule-type="masterslave" init-sql="CREATE TABLE t_log(id int, status varchar(10))" table="t_log" expected-data-file="empty_log.xml" />
    </ddl-test-case>
</integrate-test-cases>
